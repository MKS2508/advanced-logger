name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - alpha
          - beta
      skip_tests:
        description: 'Skip tests (not recommended)'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'
  REGISTRY_URL: 'https://registry.npmjs.org'

jobs:
  # ===== PRE-RELEASE VALIDATION =====
  pre-release:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.REGISTRY_URL }}

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🧪 Run tests (unless skipped)
        if: ${{ !inputs.skip_tests }}
        run: |
          npm run type-check
          npm run lint
          npm run test
          npm run build

      - name: 🏷️ Determine version
        id: version
        run: |
          case "${{ inputs.release_type }}" in
            "patch")
              NEW_VERSION=$(npm version patch --no-git-tag-version)
              ;;
            "minor") 
              NEW_VERSION=$(npm version minor --no-git-tag-version)
              ;;
            "major")
              NEW_VERSION=$(npm version major --no-git-tag-version)
              ;;
            "alpha")
              NEW_VERSION=$(npm version prerelease --preid=alpha --no-git-tag-version)
              ;;
            "beta")
              NEW_VERSION=$(npm version prerelease --preid=beta --no-git-tag-version)
              ;;
          esac
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "📦 New version: $NEW_VERSION"

      - name: 🏗️ Build for release
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dist
          path: dist/
          retention-days: 7

  # ===== CREATE RELEASE =====
  create-release:
    runs-on: ubuntu-latest
    needs: pre-release
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.REGISTRY_URL }}

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dist
          path: dist/

      - name: 🔄 Update package version
        run: npm version ${{ needs.pre-release.outputs.version }} --no-git-tag-version

      - name: 📦 Create release archives
        run: |
          # Create distribution archives
          tar -czf better-logger-${{ needs.pre-release.outputs.version }}.tar.gz dist/ docs/ README.md package.json
          zip -r better-logger-${{ needs.pre-release.outputs.version }}.zip dist/ docs/ README.md package.json
          
          # Create individual module packages
          cd dist
          tar -czf ../better-logger-core-${{ needs.pre-release.outputs.version }}.tar.gz core.js core.cjs types/core.d.ts
          tar -czf ../better-logger-styling-${{ needs.pre-release.outputs.version }}.tar.gz styling.js styling.cjs types/styling.d.ts
          tar -czf ../better-logger-exports-${{ needs.pre-release.outputs.version }}.tar.gz exports.js exports.cjs types/exports.d.ts
          cd ..

      - name: 📝 Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            echo "## Changes since $LAST_TAG" > RELEASE_NOTES.md
            git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" >> RELEASE_NOTES.md
          else
            echo "## Initial Release" > RELEASE_NOTES.md
            echo "- Complete Better Logger implementation with all features" >> RELEASE_NOTES.md
          fi
          
          # Add bundle size info
          echo "" >> RELEASE_NOTES.md
          echo "## 📦 Bundle Sizes" >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md
          ls -lh dist/*.js dist/*.cjs | grep -E '\.(js|cjs)$' >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md

      - name: 🏷️ Create and push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: release ${{ needs.pre-release.outputs.version }}"
          git tag -a "${{ needs.pre-release.outputs.tag }}" -m "Release ${{ needs.pre-release.outputs.version }}"
          git push origin main --tags

      - name: 🚀 Publish to NPM
        run: |
          if [[ "${{ inputs.release_type }}" == "alpha" || "${{ inputs.release_type }}" == "beta" ]]; then
            npm run ci:publish -- --tag ${{ inputs.release_type }}
          else
            npm run ci:publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.pre-release.outputs.tag }}
          name: Better Logger ${{ needs.pre-release.outputs.version }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: ${{ contains(inputs.release_type, 'alpha') || contains(inputs.release_type, 'beta') }}
          files: |
            better-logger-${{ needs.pre-release.outputs.version }}.tar.gz
            better-logger-${{ needs.pre-release.outputs.version }}.zip
            better-logger-core-${{ needs.pre-release.outputs.version }}.tar.gz
            better-logger-styling-${{ needs.pre-release.outputs.version }}.tar.gz
            better-logger-exports-${{ needs.pre-release.outputs.version }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ===== POST-RELEASE TASKS =====
  post-release:
    runs-on: ubuntu-latest
    needs: [pre-release, create-release]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dist
          path: dist/

      - name: 🚀 Deploy documentation
        run: |
          # Build documentation site
          mkdir -p docs-site
          cp demo.html docs-site/index.html
          cp -r dist/ docs-site/dist/
          cp -r docs/ docs-site/docs/
          cp README.md docs-site/

      - name: 📤 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs-site
          publish_branch: gh-pages
          commit_message: 'docs: update documentation for ${{ needs.pre-release.outputs.version }}'

      - name: 📊 Release summary
        run: |
          echo "## 🎉 Release Complete!" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ needs.pre-release.outputs.version }}" >> $GITHUB_STEP_SUMMARY  
          echo "- **NPM**: https://www.npmjs.com/package/@mks2508/better-logger" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub**: https://github.com/MKS2508/advanced-logger/releases/tag/${{ needs.pre-release.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Docs**: https://mks2508.github.io/advanced-logger/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npm install @mks2508/better-logger@${{ needs.pre-release.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY