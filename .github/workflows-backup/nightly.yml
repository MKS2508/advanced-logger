name: Nightly Builds

on:
  schedule:
    # Ejecutar cada día a las 3:00 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Forzar build aunque no haya cambios'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'
  REGISTRY_URL: 'https://registry.npmjs.org'

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.changes.outputs.has_changes }}
      last_commit: ${{ steps.changes.outputs.last_commit }}
      commit_count: ${{ steps.changes.outputs.commit_count }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Check for changes since last nightly
        id: changes
        run: |
          # Buscar último tag nightly
          LAST_NIGHTLY=$(git tag -l "nightly-*" | sort -V | tail -1 || echo "")
          
          if [ -z "$LAST_NIGHTLY" ]; then
            # No hay nightlies previos, verificar desde hace 24 horas
            SINCE_DATE=$(date -d '24 hours ago' --iso-8601)
            COMMITS_COUNT=$(git log --since="$SINCE_DATE" --oneline | wc -l)
          else
            # Verificar desde último nightly
            COMMITS_COUNT=$(git log $LAST_NIGHTLY..HEAD --oneline | wc -l)
          fi
          
          LAST_COMMIT=$(git rev-parse --short HEAD)
          
          echo "commit_count=$COMMITS_COUNT" >> $GITHUB_OUTPUT
          echo "last_commit=$LAST_COMMIT" >> $GITHUB_OUTPUT
          
          if [ "$COMMITS_COUNT" -gt 0 ] || [ "${{ inputs.force_build }}" == "true" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "✅ Cambios detectados: $COMMITS_COUNT commits"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT  
            echo "ℹ️ No hay cambios desde último nightly"
          fi

  nightly-build:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.has_changes == 'true'
    
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: ${{ env.REGISTRY_URL }}

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build library
        run: npm run build

      - name: 🧪 Run tests
        run: |
          npm run type-check
          npm run test
          npm run size-limit

      - name: 🏷️ Generate nightly version
        id: version
        run: |
          # Generar versión nightly usando commit y fecha
          DATE=$(date +%Y%m%d)
          SHORT_SHA="${{ needs.check-changes.outputs.last_commit }}"
          BASE_VERSION=$(node -p "require('./package.json').version")
          
          # Remover cualquier sufijo existente del base version
          CLEAN_VERSION=$(echo $BASE_VERSION | sed 's/-.*//')
          NIGHTLY_VERSION="${CLEAN_VERSION}-nightly.${DATE}.${SHORT_SHA}"
          
          echo "version=$NIGHTLY_VERSION" >> $GITHUB_OUTPUT
          echo "tag=nightly-$DATE-$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "🌙 Nightly version: $NIGHTLY_VERSION"

      - name: 📝 Update package.json for nightly
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: 📦 Create nightly archives  
        run: |
          mkdir -p nightly-dist
          
          # Crear archivos de distribución nightly
          tar -czf nightly-dist/better-logger-nightly-${{ steps.version.outputs.tag }}.tar.gz dist/ README.md package.json
          zip -r nightly-dist/better-logger-nightly-${{ steps.version.outputs.tag }}.zip dist/ README.md package.json

      - name: 🚀 Publish nightly to NPM
        run: |
          npm publish --tag nightly --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📦 Publish nightly to GitHub Packages  
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
          echo "@mks2508:registry=https://npm.pkg.github.com" >> ~/.npmrc
          npm publish --registry=https://npm.pkg.github.com --tag nightly --access public

      - name: 🏷️ Create nightly tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com" 
          git tag -a "${{ steps.version.outputs.tag }}" -m "Nightly build ${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.tag }}"

      - name: 🌙 Create nightly release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: "Nightly Build ${{ steps.version.outputs.version }}"
          body: |
            🌙 **Nightly Build** - Experimental version for testing
            
            **⚠️ This is a development build - not recommended for production use**
            
            ## 📋 Changes since last nightly
            ${{ needs.check-changes.outputs.commit_count }} commits included in this build.
            
            ## 📦 Installation
            ```bash
            npm install @mks2508/better-logger@nightly
            ```
            
            ## 🔗 Links
            - **Commit**: https://github.com/MKS2508/advanced-logger/commit/${{ needs.check-changes.outputs.last_commit }}
            - **NPM**: https://www.npmjs.com/package/@mks2508/better-logger/v/${{ steps.version.outputs.version }}
          draft: false
          prerelease: true
          files: |
            nightly-dist/better-logger-nightly-${{ steps.version.outputs.tag }}.tar.gz  
            nightly-dist/better-logger-nightly-${{ steps.version.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Nightly build summary
        run: |
          echo "## 🌙 Nightly Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commits**: ${{ needs.check-changes.outputs.commit_count }}" >> $GITHUB_STEP_SUMMARY  
          echo "- **NPM**: https://www.npmjs.com/package/@mks2508/better-logger/v/${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub**: https://github.com/MKS2508/advanced-logger/releases/tag/${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY  
          echo "npm install @mks2508/better-logger@nightly" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  no-changes:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.has_changes == 'false'
    
    steps:
      - name: ℹ️ No changes detected
        run: |
          echo "## ℹ️ No Nightly Build Required" >> $GITHUB_STEP_SUMMARY
          echo "No changes detected since last nightly build." >> $GITHUB_STEP_SUMMARY
          echo "Use \`workflow_dispatch\` with \`force_build: true\` to force a build." >> $GITHUB_STEP_SUMMARY