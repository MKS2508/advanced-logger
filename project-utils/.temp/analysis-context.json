{
  "files": [
    {
      "path": "project-utils/.temp/analysis-context.json",
      "status": "modified",
      "diff": "New file: project-utils/.temp/analysis-context.json",
      "lines_added": 0,
      "lines_removed": 0,
      "is_binary": false
    },
    {
      "path": "project-utils/.temp/commit-proposal-2025-08-29T19-13-29.md",
      "status": "added",
      "diff": "diff --git a/project-utils/.temp/commit-proposal-2025-08-29T19-13-29.md b/project-utils/.temp/commit-proposal-2025-08-29T19-13-29.md\nnew file mode 100644\nindex 0000000..a3fdec9\n--- /dev/null\n+++ b/project-utils/.temp/commit-proposal-2025-08-29T19-13-29.md\n@@ -0,0 +1,52 @@\n+### **AN√ÅLISIS PRINCIPAL**\n+\n+Se ha realizado una migraci√≥n completa de la infraestructura de CI/CD de NPM a Bun para mejorar el rendimiento. Paralelamente, se ha refactorizado la arquitectura del proyecto a un monorepo, dividiendo la librer√≠a en tres paquetes modulares e independientes: `core`, `styling` y `exports`. Las herramientas de build y automatizaci√≥n han sido actualizadas para soportar esta nueva estructura.\n+\n+---\n+\n+### **Propuesta de Commit #1**\n+\n+```markdown\n+chore(ci): migrar la infraestructura de CI/CD de NPM a Bun\n+\n+Se reemplaza `npm` con `bun` en todos los flujos de trabajo de GitHub Actions para estandarizar las herramientas y acelerar los tiempos de ejecuci√≥n. Esto afecta la instalaci√≥n de dependencias, la ejecuci√≥n de scripts y la configuraci√≥n del entorno de pruebas.\n+\n+<technical>\n+- **Workflows de GitHub Actions**: Modificados `ci-quality.yml`, `docs-demo.yml`, `nightly-auto.yml`, `releases-core.yml` y `releases-full.yml`.\n+- **Setup**: Reemplazado `actions/setup-node` por `oven-sh/setup-bun`.\n+- **Instalaci√≥n**: Cambiado `npm run ci:install` por `bun install --frozen-lockfile`.\n+- **Ejecuci√≥n de Scripts**: Actualizados todos los comandos `npm run` a `bun run`.\n+- **Matriz de Pruebas**: Estandarizada para usar `bun` en todas las versiones de Node.\n+</technical>\n+\n+<changelog>\n+## [Infraestructura] ‚öôÔ∏è\n+- Optimizaci√≥n de la infraestructura de CI/CD para mejorar el rendimiento y la velocidad de los builds.\n+</changelog>\n+```\n+\n+### **Propuesta de Commit #2**\n+\n+```markdown\n+refactor(arquitectura): refactorizar a monorepo y modularizar paquetes\n+\n+Se reestructura el proyecto a una arquitectura de monorepo utilizando workspaces. La librer√≠a se ha dividido en tres paquetes independientes: `@advanced-logger/core`, `@advanced-logger/styling` y `@advanced-logger/exports`.\n+\n+Esta modularizaci√≥n mejora la mantenibilidad, permite el versionado independiente de cada paquete y facilita la reutilizaci√≥n del c√≥digo. Se han actualizado las configuraciones de build y `package.json` para reflejar la nueva estructura.\n+\n+<technical>\n+- **Estructura de Directorios**: Creada la carpeta `packages/` que contiene `core/`, `styling/` y `exports/`.\n+- **package.json**: Actualizado el `package.json` ra√≠z para definir los workspaces.\n+- **Paquetes**: Cada paquete (`core`, `styling`, `exports`) tiene su propio `package.json` con sus dependencias y scripts.\n+- **Build**: Actualizado `vite.config.ts` y los scripts de build para compilar cada paquete de forma independiente.\n+</technical>\n+\n+<changelog>\n+## [Refactor] ‚ôªÔ∏è\n+- Arquitectura refactorizada a un monorepo para mayor modularidad. La librer√≠a ahora se distribuye en tres paquetes: `@advanced-logger/core`, `@advanced-logger/styling` y `@advanced-logger/exports`.\n+</changelog>\n+```\n+\n+---\n+\n+**DECISI√ìN**: Se proponen dos commits porque los cambios abordan dos √°reas conceptualmente distintas: la migraci√≥n de herramientas de CI/CD (un cambio de infraestructura) y la refactorizaci√≥n a una arquitectura monorepo (un cambio estructural del c√≥digo base). Separarlos mantiene el historial del repositorio limpio y facilita el seguimiento de cambios espec√≠ficos.",
      "lines_added": 52,
      "lines_removed": 0,
      "is_binary": false
    },
    {
      "path": "project-utils/.temp/gemini-prompt.txt",
      "status": "modified",
      "diff": "diff --git a/project-utils/.temp/gemini-prompt.txt b/project-utils/.temp/gemini-prompt.txt\nindex 8fefda8..1eb3236 100644\n--- a/project-utils/.temp/gemini-prompt.txt\n+++ b/project-utils/.temp/gemini-prompt.txt\n@@ -25,187 +25,51 @@ Eres un asistente especializado en an√°lisis de c√≥digo y automatizaci√≥n para e\n ## Datos del An√°lisis\n {\n   \"stats\": {\n-    \"total_files\": 20,\n-    \"total_additions\": 61,\n-    \"total_deletions\": 15,\n+    \"total_files\": 4,\n+    \"total_additions\": 28,\n+    \"total_deletions\": 26,\n     \"files_by_extension\": {\n-      \"yml\": 5,\n-      \"md\": 3,\n-      \"json\": 6,\n-      \"txt\": 1,\n-      \"ts\": 5\n+      \"json\": 1,\n+      \"md\": 2,\n+      \"txt\": 1\n     },\n     \"directories_affected\": [\n-      \".github\",\n-      \".release-notes-0.2.0.md\",\n-      \"CHANGELOG.json\",\n-      \"package.json\",\n-      \"packages\",\n       \"project-utils\",\n-      \"...\",\n-      \"vite.config.ts\"\n+      \"...\"\n     ]\n   },\n   \"files\": [\n-    {\n-      \"path\": \".github/workflows/ci-quality.yml\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 19,\n-      \"lines_removed\": 20,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/.github/workflows/ci-quality.yml b/.github/workflows/ci-quality.yml\\nindex 5974ff0..b59e9cc 100644\\n--- a/.github/workflows/ci-quality.yml\\n+++ b/.github/workflows/ci-quality.yml\\n@@ -29,10 +29,10 @@ jobs:\\n     strategy:\\n       fail-fast: false\\n       matrix:\\n-        node-version: [18, 20, 21]\\n+        bun-version: [\\\"1.0\\\", \\\"latest\\\"]\\n         build-mode: [full, core, styling, exports]\\n     \\n-    name: Test Node ${{ matrix.node-version }} - ${{ matrix.build-mode }}\\n+    name: Test Bun ${{ matrix.bun-version }} - ${{ matrix.build-mode }}\\n     \\n     steps:\\n       - name: üì• Checkout code\\n@@ -40,31 +40,30 @@ jobs:\\n         with:\\n           fetch-depth: 0\\n \\n-      - name: üì¶ Setup Node.js ${{ matrix.node-version }}\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun ${{ matrix.bun-version }}\\n+        uses: oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ matrix.node-version }}\\n-          cache: 'npm'\\n+          bun-version: ${{ matrix.bun-version }}\\n \\n       - name: üîß Install dependencies\\n-        run: npm run ci:install\\n+        run: bun install --frozen-lockfile\\n \\n       - name: üîç Type checking\\n-        run: npm run type-check\\n+        run: bun run type-check\\n \\n       - name: üèóÔ∏è Build ${{ matrix.build-mode }}\\n         run: |\\n           if [ \\\"${{ matrix.build-mode }}\\\" = \\\"full\\\" ]; then\\n-            npm run build:all\\n+            bun run build:all\\n           else\\n-            npm run build:${{ matrix.build-mode }}\\n+            bun run build:\"\n-    },\n-    {\n-      \"path\": \".github/workflows/docs-demo.yml\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 5,\n-      \"lines_removed\": 7,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/.github/workflows/docs-demo.yml b/.github/workflows/docs-demo.yml\\nindex f7c4cd3..4ae3dcc 100644\\n--- a/.github/workflows/docs-demo.yml\\n+++ b/.github/workflows/docs-demo.yml\\n@@ -22,17 +22,15 @@ jobs:\\n       - name: üì• Checkout code\\n         uses: actions/checkout@v4\\n \\n-      - name: üì¶ Setup Node.js\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun\\n+        uses: oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ env.NODE_VERSION }}\\n-          cache: 'npm'\\n-\\n+          bun-version: latest          \\n       - name: üîß Install dependencies\\n-        run: npm run ci:install\\n+        run: bun install --frozen-lockfile\\n \\n       - name: üèóÔ∏è Build library for demo\\n-        run: npm run build:full\\n+        run: bun run build:full\\n \\n       - name: üèóÔ∏è Setup demo structure\\n         run: |\"\n-    },\n-    {\n-      \"path\": \".github/workflows/nightly-auto.yml\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 10,\n-      \"lines_removed\": 12,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/.github/workflows/nightly-auto.yml b/.github/workflows/nightly-auto.yml\\nindex c936f3d..54a3aba 100644\\n--- a/.github/workflows/nightly-auto.yml\\n+++ b/.github/workflows/nightly-auto.yml\\n@@ -152,20 +152,18 @@ jobs:\\n           fetch-depth: 0\\n           token: ${{ secrets.GITHUB_TOKEN }}\\n \\n-      - name: üì¶ Setup Node.js\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun\\n+        uses: oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ env.NODE_VERSION }}\\n-          cache: 'npm'\\n-\\n+          bun-version: latest          \\n       - name: üîß Install dependencies\\n-        run: npm run ci:install\\n+        run: bun install --frozen-lockfile\\n \\n       - name: üèóÔ∏è Build library with quality checks\\n         run: |\\n-          npm run build:all\\n-          npm run type-check\\n-          npm run ci:test\\n+          bun run build:all\\n+          bun run type-check\\n+          bun run test\\n \\n       - name: üè∑Ô∏è Generate intelligent nightly version\\n         id: version\\n@@ -196,7 +194,7 @@ jobs:\\n \\n       - name: üìù Update package for nightly\\n         run: |\\n-          npm version ${{ steps.version.outputs.version }} --no-git-tag-version\\n+          bun --bun npm version ${{ steps.version.outputs.version }} --no-git-tag-version\\n \\n       - name: üìä Generate build report\\n         run: |\\n@@ -236,7 +234,7 @@ jobs:\\n \\n       - name: üöÄ Publish nightly to NPM\\n         run: |\\n-          npm publish --tag nightly --access public\\n+          bun publish --tag nightly --access\"\n-    },\n-    {\n-      \"path\": \".github/workflows/releases-core.yml\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 23,\n-      \"lines_removed\": 27,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/.github/workflows/releases-core.yml b/.github/workflows/releases-core.yml\\nindex aa4b59c..9fdf3bf 100644\\n--- a/.github/workflows/releases-core.yml\\n+++ b/.github/workflows/releases-core.yml\\n@@ -62,25 +62,24 @@ jobs:\\n           fetch-depth: 0\\n           token: ${{ secrets.GITHUB_TOKEN }}\\n \\n-      - name: üì¶ Setup Node.js\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun\\n+        uses: actions/oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ env.NODE_VERSION }}\\n-          cache: 'npm'\\n-\\n+          bun-version: latest\\n+          \\n       - name: üîß Install dependencies\\n-        run: npm run ci:install\\n+        run: bun install --frozen-lockfile\\n \\n       - name: üß™ Run tests (unless skipped)\\n         if: ${{ !inputs.skip_tests }}\\n         run: |\\n-          npm run type-check\\n-          npm run ci:test\\n+          bun run type-check\\n+          bun run test\\n \\n       - name: üè∑Ô∏è Generate version\\n         id: version\\n         run: |\\n-          npm run version:${{ inputs.release_type }}\\n+          bun run version:${{ inputs.release_type }}\\n           \\n           # Obtener nueva versi√≥n\\n           NEW_VERSION=$(node -p \\\"require('./package.json').version\\\")\\n@@ -128,14 +127,13 @@ jobs:\\n       - name: üì• Checkout code\\n         uses: actions/checkout@v4\\n \\n-      - name: üì¶ Setup Node.js\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun\\n+        uses: actions/oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ env.NODE_VERSI\"\n-    },\n-    {\n-      \"path\": \".github/workflows/releases-full.yml\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 31,\n-      \"lines_removed\": 39,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/.github/workflows/releases-full.yml b/.github/workflows/releases-full.yml\\nindex 44bab03..554fbf1 100644\\n--- a/.github/workflows/releases-full.yml\\n+++ b/.github/workflows/releases-full.yml\\n@@ -63,14 +63,12 @@ jobs:\\n           fetch-depth: 0\\n           token: ${{ secrets.GITHUB_TOKEN }}\\n \\n-      - name: üì¶ Setup Node.js\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun\\n+        uses: oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ env.NODE_VERSION }}\\n-          cache: 'npm'\\n-\\n+          bun-version: latest\\n       - name: üîß Install dependencies\\n-        run: npm run ci:install\\n+        run: bun install --frozen-lockfile\\n \\n       - name: ü§ñ Run Gemini AI Analysis\\n         id: analysis\\n@@ -78,7 +76,7 @@ jobs:\\n           echo \\\"ü§ñ Ejecutando an√°lisis inteligente con Gemini...\\\"\\n           \\n           # Usar project-utils auto-release con Gemini\\n-          npm run release:auto\\n+          bun run release:auto\\n           \\n           # Verificar si se debe hacer release\\n           if [ -f \\\"project-utils/.temp/gemini-response.md\\\" ]; then\\n@@ -131,20 +129,18 @@ jobs:\\n           fetch-depth: 0\\n           token: ${{ secrets.GITHUB_TOKEN }}\\n \\n-      - name: üì¶ Setup Node.js\\n-        uses: actions/setup-node@v4\\n+      - name: üì¶ Setup Bun\\n+        uses: oven-sh/setup-bun@v2\\n         with:\\n-          node-version: ${{ env.NODE_VERSION }}\\n-          cache: 'npm'\\n-\\n+          bun-version: latest\\n       - name: üîß Install dependencies\\n-        run: npm \"\n-    },\n-    {\n-      \"path\": \".release-notes-0.2.0.md\",\n-      \"status\": \"added\",\n-      \"lines_added\": 129,\n-      \"lines_removed\": 0,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/.release-notes-0.2.0.md b/.release-notes-0.2.0.md\\nnew file mode 100644\\nindex 0000000..a6fa5da\\n--- /dev/null\\n+++ b/.release-notes-0.2.0.md\\n@@ -0,0 +1,129 @@\\n+# Better Logger - 0.2.0\\n+\\n+## üìã Resumen\\n+Nuevas funcionalidades incluyendo feat(package): update to v4.0.0-alpha.1 pre-release version y 4 m√°s\\n+\\n+## ‚ú® Nuevas Funcionalidades\\n+- feat(package): update to v4.0.0-alpha.1 pre-release version\\n+- feat(package): publish as @mks2508/better-logger@0.0.1\\n+- Demo profesional interactivo con CDN imports\\n+- Showcase completo de todas las funcionalidades del logger\\n+- Ejemplos visuales de temas y animaciones CSS\\n+\\n+## üêõ Correcciones\\n+- fix(ci): correct script names in performance and visual test jobs\\n+- ‚úÖ CSS assets Jekyll cargando correctamente\\n+- ‚úÖ CORS error demo solucionado con jsDelivr\\n+- ‚úÖ Navegaci√≥n funcionando entre demo y docs\\n+- ‚úÖ NPM registry configurado para package linking\\n+- ‚úÖ Preparado para release con token\\n+\\n+## üöÄ Mejoras\\n+- üé® **Sistema de Banner Inteligente** - 5 tipos diferentes con auto-detecci√≥n\\n+- üöÄ **CLI Avanzado** - Comandos completos para configuraci√≥n y demostraci√≥n\\n+- üéØ **Detecci√≥n Browser** - Optimizaci√≥n autom√°tica seg√∫n capacidades\\n+- üì± **Soporte SVG** - Logos vectoriales con animaciones embebidas\\n+- ‚ú® **CSS Animations** - Gradientes animados y efectos visuales\\n+- üåà **Sistema de Temas** - 4 esquemas visuales con banners √∫nicos\\n+- üîß **Progressive Enhancement** - Fallbacks para m√°xima compatibilidad\\n+- üé™ **Modo Demo** - Demostraci√≥n int\"\n-    },\n-    {\n-      \"path\": \"CHANGELOG.json\",\n-      \"status\": \"added\",\n-      \"lines_added\": 376,\n-      \"lines_removed\": 0,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/CHANGELOG.json b/CHANGELOG.json\\nnew file mode 100644\\nindex 0000000..89e93ae\\n--- /dev/null\\n+++ b/CHANGELOG.json\\n@@ -0,0 +1,376 @@\\n+{\\n+  \\\"current_version\\\": \\\"0.2.0\\\",\\n+  \\\"versions\\\": [\\n+    {\\n+      \\\"version\\\": \\\"0.2.0\\\",\\n+      \\\"date\\\": \\\"2025-08-29\\\",\\n+      \\\"type\\\": \\\"minor\\\",\\n+      \\\"title\\\": \\\"Nuevas funcionalidades incluyendo feat(package): update to v4.0.0-alpha.1 pre-release version y 4 m√°s\\\",\\n+      \\\"changes\\\": [\\n+        {\\n+          \\\"type\\\": \\\"improvement\\\",\\n+          \\\"title\\\": \\\"üé® **Sistema de Banner Inteligente** - 5 tipos diferentes con auto-detecci√≥n\\\",\\n+          \\\"description\\\": \\\"üé® **Sistema de Banner Inteligente** - 5 tipos diferentes con auto-detecci√≥n\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"improvement\\\",\\n+          \\\"title\\\": \\\"üöÄ **CLI Avanzado** - Comandos completos para configuraci√≥n y demostraci√≥n\\\",\\n+          \\\"description\\\": \\\"üöÄ **CLI Avanzado** - Comandos completos para configuraci√≥n y demostraci√≥n\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"improvement\\\",\\n+          \\\"title\\\": \\\"üéØ **Detecci√≥n Browser** - Optimizaci√≥n autom√°tica seg√∫n capacidades\\\",\\n+          \\\"description\\\": \\\"üéØ **Detecci√≥n Browser** - Optimizaci√≥n autom√°tica seg√∫n capacidades\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"improvement\\\",\\n+          \\\"title\\\": \\\"üì± **Soporte SVG** - Logos vectoriales con animaciones embebidas\\\",\\n+          \\\"description\\\": \\\"üì± **Soporte SVG** - Logos vectoriales con animaciones embebidas\\\"\\n+        },\\n+        {\\n+          \\\"type\\\": \\\"improvement\\\",\\n+          \\\"title\\\": \\\"‚ú® **CSS A\"\n-    },\n-    {\n-      \"path\": \"package.json\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 3,\n-      \"lines_removed\": 3,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/package.json b/package.json\\nindex dfa0f90..c0dab41 100644\\n--- a/package.json\\n+++ b/package.json\\n@@ -1,6 +1,6 @@\\n {\\n   \\\"name\\\": \\\"@mks2508/better-logger\\\",\\n-  \\\"version\\\": \\\"0.0.3-alpha.1\\\",\\n+  \\\"version\\\": \\\"0.2.0\\\",\\n   \\\"type\\\": \\\"module\\\",\\n   \\\"description\\\": \\\"State-of-the-art console logger with advanced CSS styling, SVG support, animations, and CLI interface\\\",\\n   \\\"main\\\": \\\"dist/index.js\\\",\\n@@ -30,7 +30,7 @@\\n   \\\"scripts\\\": {\\n     \\\"dev\\\": \\\"vite\\\",\\n     \\\"build\\\": \\\"tsc && BUILD_MODE=full vite build\\\",\\n-    \\\"build:full\\\": \\\"tsc && BUILD_MODE=full vite build\\\", \\n+    \\\"build:full\\\": \\\"tsc && BUILD_MODE=full vite build\\\",\\n     \\\"build:core\\\": \\\"tsc && BUILD_MODE=core vite build\\\",\\n     \\\"build:styling\\\": \\\"tsc && BUILD_MODE=styling vite build\\\",\\n     \\\"build:exports\\\": \\\"tsc && BUILD_MODE=exports vite build\\\",\\n@@ -50,7 +50,7 @@\\n     \\\"commit:ui\\\": \\\"bun project-utils/commit-ui.ts\\\",\\n     \\\"version:auto\\\": \\\"bun project-utils/version-manager.ts --auto-approve\\\",\\n     \\\"version:patch\\\": \\\"bun project-utils/version-manager.ts --type patch --auto-approve\\\",\\n-    \\\"version:minor\\\": \\\"bun project-utils/version-manager.ts --type minor --auto-approve\\\", \\n+    \\\"version:minor\\\": \\\"bun project-utils/version-manager.ts --type minor --auto-approve\\\",\\n     \\\"version:major\\\": \\\"bun project-utils/version-manager.ts --type major --auto-approve\\\",\\n     \\\"version:alpha\\\": \\\"bun project-utils/version-manager.ts --prefix alpha --auto-approve\\\",\\n     \\\"version:beta\\\": \\\"bun project-utils/version-manager.ts --prefix beta --auto-approve\\\",\"\n-    },\n-    {\n-      \"path\": \"packages/core/package.json\",\n-      \"status\": \"added\",\n-      \"lines_added\": 35,\n-      \"lines_removed\": 0,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/packages/core/package.json b/packages/core/package.json\\nnew file mode 100644\\nindex 0000000..017898e\\n--- /dev/null\\n+++ b/packages/core/package.json\\n@@ -0,0 +1,35 @@\\n+{\\n+  \\\"name\\\": \\\"@mks2508/better-logger-core\\\",\\n+  \\\"version\\\": \\\"0.2.0\\\",\\n+  \\\"type\\\": \\\"module\\\",\\n+  \\\"description\\\": \\\"Core logging functionality for Better Logger - Advanced console logger with hierarchical levels\\\",\\n+  \\\"main\\\": \\\"dist/index.js\\\",\\n+  \\\"types\\\": \\\"dist/types/core.d.ts\\\",\\n+  \\\"keywords\\\": [\\n+    \\\"logger\\\",\\n+    \\\"console\\\",\\n+    \\\"core\\\",\\n+    \\\"typescript\\\",\\n+    \\\"browser\\\",\\n+    \\\"debug\\\"\\n+  ],\\n+  \\\"author\\\": \\\"MKS2508\\\",\\n+  \\\"license\\\": \\\"MIT\\\",\\n+  \\\"repository\\\": {\\n+    \\\"type\\\": \\\"git\\\",\\n+    \\\"url\\\": \\\"git+https://github.com/MKS2508/advanced-logger.git\\\",\\n+    \\\"directory\\\": \\\"packages/core\\\"\\n+  },\\n+  \\\"bugs\\\": {\\n+    \\\"url\\\": \\\"https://github.com/MKS2508/advanced-logger/issues\\\"\\n+  },\\n+  \\\"homepage\\\": \\\"https://mks2508.github.io/advanced-logger/\\\",\\n+  \\\"publishConfig\\\": {\\n+    \\\"access\\\": \\\"public\\\",\\n+    \\\"registry\\\": \\\"https://registry.npmjs.org/\\\"\\n+  },\\n+  \\\"files\\\": [\\n+    \\\"dist\\\",\\n+    \\\"README.md\\\"\\n+  ]\\n+}\\n\\\\ No newline at end of file\"\n-    },\n-    {\n-      \"path\": \"packages/exports/package.json\",\n-      \"status\": \"added\",\n-      \"lines_added\": 41,\n-      \"lines_removed\": 0,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/packages/exports/package.json b/packages/exports/package.json\\nnew file mode 100644\\nindex 0000000..daa5b52\\n--- /dev/null\\n+++ b/packages/exports/package.json\\n@@ -0,0 +1,41 @@\\n+{\\n+  \\\"name\\\": \\\"@mks2508/better-logger-exports\\\",\\n+  \\\"version\\\": \\\"0.2.0\\\", \\n+  \\\"type\\\": \\\"module\\\",\\n+  \\\"description\\\": \\\"Export handlers for Better Logger - File, Remote, Analytics and custom log destinations\\\",\\n+  \\\"main\\\": \\\"dist/index.js\\\",\\n+  \\\"types\\\": \\\"dist/types/exports-module.d.ts\\\",\\n+  \\\"keywords\\\": [\\n+    \\\"logger\\\",\\n+    \\\"console\\\",\\n+    \\\"exports\\\",\\n+    \\\"handlers\\\",\\n+    \\\"file\\\",\\n+    \\\"remote\\\",\\n+    \\\"analytics\\\",\\n+    \\\"typescript\\\",\\n+    \\\"browser\\\"\\n+  ],\\n+  \\\"author\\\": \\\"MKS2508\\\",\\n+  \\\"license\\\": \\\"MIT\\\",\\n+  \\\"repository\\\": {\\n+    \\\"type\\\": \\\"git\\\",\\n+    \\\"url\\\": \\\"git+https://github.com/MKS2508/advanced-logger.git\\\",\\n+    \\\"directory\\\": \\\"packages/exports\\\"\\n+  },\\n+  \\\"bugs\\\": {\\n+    \\\"url\\\": \\\"https://github.com/MKS2508/advanced-logger/issues\\\"\\n+  },\\n+  \\\"homepage\\\": \\\"https://mks2508.github.io/advanced-logger/\\\",\\n+  \\\"publishConfig\\\": {\\n+    \\\"access\\\": \\\"public\\\",\\n+    \\\"registry\\\": \\\"https://registry.npmjs.org/\\\"\\n+  },\\n+  \\\"files\\\": [\\n+    \\\"dist\\\",\\n+    \\\"README.md\\\"\\n+  ],\\n+  \\\"peerDependencies\\\": {\\n+    \\\"@mks2508/better-logger-core\\\": \\\"^0.2.0\\\"\\n+  }\\n+}\\n\\\\ No newline at end of file\"\n-    },\n-    {\n-      \"path\": \"packages/styling/package.json\",\n-      \"status\": \"added\",\n-      \"lines_added\": 41,\n-      \"lines_removed\": 0,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/packages/styling/package.json b/packages/styling/package.json\\nnew file mode 100644\\nindex 0000000..8289163\\n--- /dev/null\\n+++ b/packages/styling/package.json\\n@@ -0,0 +1,41 @@\\n+{\\n+  \\\"name\\\": \\\"@mks2508/better-logger-styling\\\",\\n+  \\\"version\\\": \\\"0.2.0\\\",\\n+  \\\"type\\\": \\\"module\\\",\\n+  \\\"description\\\": \\\"Advanced CSS styling system for Better Logger - Console styling with gradients, animations and SVG support\\\",\\n+  \\\"main\\\": \\\"dist/index.js\\\",\\n+  \\\"types\\\": \\\"dist/types/styling-module.d.ts\\\",\\n+  \\\"keywords\\\": [\\n+    \\\"logger\\\",\\n+    \\\"console\\\",\\n+    \\\"styling\\\",\\n+    \\\"css\\\",\\n+    \\\"svg\\\",\\n+    \\\"animation\\\",\\n+    \\\"gradients\\\",\\n+    \\\"typescript\\\",\\n+    \\\"browser\\\"\\n+  ],\\n+  \\\"author\\\": \\\"MKS2508\\\",\\n+  \\\"license\\\": \\\"MIT\\\",\\n+  \\\"repository\\\": {\\n+    \\\"type\\\": \\\"git\\\",\\n+    \\\"url\\\": \\\"git+https://github.com/MKS2508/advanced-logger.git\\\",\\n+    \\\"directory\\\": \\\"packages/styling\\\"\\n+  },\\n+  \\\"bugs\\\": {\\n+    \\\"url\\\": \\\"https://github.com/MKS2508/advanced-logger/issues\\\"\\n+  },\\n+  \\\"homepage\\\": \\\"https://mks2508.github.io/advanced-logger/\\\",\\n+  \\\"publishConfig\\\": {\\n+    \\\"access\\\": \\\"public\\\",\\n+    \\\"registry\\\": \\\"https://registry.npmjs.org/\\\"\\n+  },\\n+  \\\"files\\\": [\\n+    \\\"dist\\\",\\n+    \\\"README.md\\\"\\n+  ],\\n+  \\\"peerDependencies\\\": {\\n+    \\\"@mks2508/better-logger-core\\\": \\\"^0.2.0\\\"\\n+  }\\n+}\\n\\\\ No newline at end of file\"\n-    },\n     {\n       \"path\": \"project-utils/.temp/analysis-context.json\",\n       \"status\": \"modified\",\n-      \"lines_added\": 39,\n-      \"lines_removed\": 6,\n+      \"lines_added\": 93,\n+      \"lines_removed\": 117,\n       \"is_binary\": true,\n-      \"diff_preview\": \"diff --git a/project-utils/.temp/analysis-context.json b/project-utils/.temp/analysis-context.json\\nindex f443d31..c9c1e38 100644\\n--- a/project-utils/.temp/analysis-context.json\\n+++ b/project-utils/.temp/analysis-context.json\\n@@ -74,6 +74,38 @@\\n       \\\"lines_removed\\\": 17,\\n       \\\"is_binary\\\": false\\n     },\\n+    {\\n+      \\\"path\\\": \\\"project-utils/.temp/analysis-context.json\\\",\\n+      \\\"status\\\": \\\"added\\\",\\n+      \\\"diff\\\": \\\"diff --git a/project-utils/.temp/analysis-context.json b/project-utils/.temp/analysis-context.json\\\\nnew file mode 100644\\\\nindex 0000000..f443d31\\\\n--- /dev/null\\\\n+++ b/project-utils/.temp/analysis-context.json\\\\n@@ -0,0 +1,189 @@\\\\n+{\\\\n+  \\\\\\\"files\\\\\\\": [\\\\n+    {\\\\n+      \\\\\\\"path\\\\\\\": \\\\\\\".github/workflows/ci.yml -> .github/workflows-backup/ci.yml\\\\\\\",\\\\n+      \\\\\\\"status\\\\\\\": \\\\\\\"renamed\\\\\\\",\\\\n+      \\\\\\\"diff\\\\\\\": \\\\\\\"\\\\\\\"\\\\n+    },\\\\n+    {\\\\n+      \\\\\\\"path\\\\\\\": \\\\\\\".github/workflows-backup/nightly.yml\\\\\\\",\\\\n+      \\\\\\\"status\\\\\\\": \\\\\\\"added\\\\\\\",\\\\n+      \\\\\\\"diff\\\\\\\": \\\\\\\"diff --git a/.github/workflows-backup/nightly.yml b/.github/workflows-backup/nightly.yml\\\\\\\\nnew file mode 100644\\\\\\\\nindex 0000000..2618595\\\\\\\\n--- /dev/null\\\\\\\\n+++ b/.github/workflows-backup/nightly.yml\\\\\\\\n@@ -0,0 +1,196 @@\\\\\\\\n+name: Nightly Builds\\\\\\\\n+\\\\\\\\n+on:\\\\\\\\n+  schedule:\\\\\\\\n+    # Ejecutar cada d√≠a a las 3:00 AM UTC\\\\\\\\n+    - cron: '0 3 * * *'\\\\\\\\n+  workflow_dispatch:\\\\\\\\n+    inputs:\\\\\\\\n+      force_build:\\\\\\\\n+        description: 'Forzar build aunque no haya cambios'\\\\\\\\n+        required: false\\\\\\\\n+        default: false\\\\\\\\n+        type: boolean\\\\\\\\n+\\\\\\\\n+env:\\\\\\\\n+  NOD\"\n+      \"diff_preview\": \"diff --git a/project-utils/.temp/analysis-context.json b/project-utils/.temp/analysis-context.json\\nindex c9c1e38..a51e014 100644\\n--- a/project-utils/.temp/analysis-context.json\\n+++ b/project-utils/.temp/analysis-context.json\\n@@ -1,209 +1,185 @@\\n {\\n   \\\"files\\\": [\\n-    {\\n-      \\\"path\\\": \\\".github/workflows/ci.yml -> .github/workflows-backup/ci.yml\\\",\\n-      \\\"status\\\": \\\"renamed\\\",\\n-      \\\"diff\\\": \\\"\\\"\\n-    },\\n-    {\\n-      \\\"path\\\": \\\".github/workflows-backup/nightly.yml\\\",\\n-      \\\"status\\\": \\\"added\\\",\\n-      \\\"diff\\\": \\\"diff --git a/.github/workflows-backup/nightly.yml b/.github/workflows-backup/nightly.yml\\\\nnew file mode 100644\\\\nindex 0000000..2618595\\\\n--- /dev/null\\\\n+++ b/.github/workflows-backup/nightly.yml\\\\n@@ -0,0 +1,196 @@\\\\n+name: Nightly Builds\\\\n+\\\\n+on:\\\\n+  schedule:\\\\n+    # Ejecutar cada d√≠a a las 3:00 AM UTC\\\\n+    - cron: '0 3 * * *'\\\\n+  workflow_dispatch:\\\\n+    inputs:\\\\n+      force_build:\\\\n+        description: 'Forzar build aunque no haya cambios'\\\\n+        required: false\\\\n+        default: false\\\\n+        type: boolean\\\\n+\\\\n+env:\\\\n+  NODE_VERSION: '20'\\\\n+  REGISTRY_URL: 'https://registry.npmjs.org'\\\\n+\\\\n+jobs:\\\\n+  check-changes:\\\\n+    runs-on: ubuntu-latest\\\\n+    outputs:\\\\n+      has_changes: ${{ steps.changes.outputs.has_changes }}\\\\n+      last_commit: ${{ steps.changes.outputs.last_commit }}\\\\n+      commit_count: ${{ steps.changes.outputs.commit_count }}\\\\n+    \\\\n+    steps:\\\\n+      - name: üì• Checkout code\\\\n+        uses: actions/checkout@v4\\\\n+        with:\\\\n+          fetch-depth: \"\n     },\n     {\n-      \"path\": \"project-utils/.temp/commit-proposal-2025-08-29T18-22-24.md\",\n+      \"path\": \"project-utils/.temp/commit-proposal-2025-08-29T19-12-56.md\",\n       \"status\": \"added\",\n-      \"lines_added\": 40,\n+      \"lines_added\": 53,\n       \"lines_removed\": 0,\n       \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/.temp/commit-proposal-2025-08-29T18-22-24.md b/project-utils/.temp/commit-proposal-2025-08-29T18-22-24.md\\nnew file mode 100644\\nindex 0000000..9c98e0b\\n--- /dev/null\\n+++ b/project-utils/.temp/commit-proposal-2025-08-29T18-22-24.md\\n@@ -0,0 +1,40 @@\\n+### **AN√ÅLISIS PRINCIPAL**\\n+\\n+Se ha detectado una refactorizaci√≥n masiva y la implementaci√≥n de un sistema de automatizaci√≥n completo para el proyecto. Los cambios introducen una infraestructura de CI/CD modular y avanzada, junto con un conjunto de herramientas locales (`project-utils`) para automatizar la generaci√≥n de commits, el versionado y la creaci√≥n de releases, incluyendo integraci√≥n con IA (Gemini). El sistema de build ha sido modificado para soportar compilaciones modulares (`full`, `core`, `styling`, `exports`), aline√°ndose con los nuevos workflows de GitHub Actions.\\n+\\n+---\\n+\\n+### **Propuesta de Commit #1**\\n+\\n+```markdown\\n+feat(build): Implementaci√≥n de Sistema de Build y Release Modular con IA\\n+\\n+Se introduce un sistema de automatizaci√≥n y CI/CD completamente nuevo y avanzado para mejorar la eficiencia del desarrollo y la gesti√≥n de releases.\\n+\\n+Este sistema reemplaza los flujos de trabajo monol√≠ticos anteriores con una arquitectura modular y potente que permite builds y releases independientes para los distintos componentes de la librer√≠a (`core`, `styling`, `exports`). Adem√°s, se integra un conjunto de herramientas en `project-utils` que automatizan tareas clave como la generaci√≥n de commits, \"\n+      \"diff_preview\": \"diff --git a/project-utils/.temp/commit-proposal-2025-08-29T19-12-56.md b/project-utils/.temp/commit-proposal-2025-08-29T19-12-56.md\\nnew file mode 100644\\nindex 0000000..9349f0a\\n--- /dev/null\\n+++ b/project-utils/.temp/commit-proposal-2025-08-29T19-12-56.md\\n@@ -0,0 +1,53 @@\\n+### **AN√ÅLISIS PRINCIPAL**\\n+\\n+Se ha realizado una migraci√≥n completa de la infraestructura de CI/CD de NPM a Bun para mejorar el rendimiento. Paralelamente, se ha refactorizado la arquitectura del proyecto a un monorepo, dividiendo la librer√≠a en tres paquetes modulares e independientes: `core`, `styling` y `exports`. Las herramientas de build y automatizaci√≥n han sido actualizadas para soportar esta nueva estructura.\\n+\\n+---\\n+\\n+### **Propuesta de Commit #1**\\n+\\n+```markdown\\n+chore(ci): migrar la infraestructura de CI/CD de NPM a Bun\\n+\\n+Se reemplaza `npm` con `bun` en todos los flujos de trabajo de GitHub Actions para estandarizar las herramientas y acelerar los tiempos de ejecuci√≥n. Esto afecta la instalaci√≥n de dependencias, la ejecuci√≥n de scripts y la configuraci√≥n del entorno de pruebas.\\n+\\n+<technical>\\n+- **Workflows de GitHub Actions**: Modificados `ci-quality.yml`, `docs-demo.yml`, `nightly-auto.yml`, `releases-core.yml` y `releases-full.yml`.\\n+- **Setup**: Reemplazado `actions/setup-node` por `oven-sh/setup-bun`.\\n+- **Instalaci√≥n**: Cambiado `npm run ci:install` por `bun install --frozen-lockfile`.\\n+- **Ejecuci√≥n de Scripts**: Actualizados todos los comandos `npm run` a `bun run`.\\n+- **Matriz de Prueb\"\n     },\n     {\n       \"path\": \"project-utils/.temp/gemini-prompt.txt\",\n       \"status\": \"modified\",\n-      \"lines_added\": 39,\n-      \"lines_removed\": 6,\n+      \"lines_added\": 93,\n+      \"lines_removed\": 117,\n       \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/.temp/gemini-prompt.txt b/project-utils/.temp/gemini-prompt.txt\\nindex b89b032..087f3fb 100644\\n--- a/project-utils/.temp/gemini-prompt.txt\\n+++ b/project-utils/.temp/gemini-prompt.txt\\n@@ -25,13 +25,14 @@ Eres un asistente especializado en an√°lisis de c√≥digo y automatizaci√≥n para e\\n ## Datos del An√°lisis\\n {\\n   \\\"stats\\\": {\\n-    \\\"total_files\\\": 20,\\n-    \\\"total_additions\\\": 150,\\n+    \\\"total_files\\\": 24,\\n+    \\\"total_additions\\\": 162,\\n     \\\"total_deletions\\\": 3,\\n     \\\"files_by_extension\\\": {\\n       \\\"yml\\\": 9,\\n-      \\\"json\\\": 1,\\n-      \\\"md\\\": 1,\\n+      \\\"json\\\": 2,\\n+      \\\"md\\\": 3,\\n+      \\\"txt\\\": 1,\\n       \\\"ts\\\": 8,\\n       \\\"js\\\": 1\\n     },\\n@@ -118,6 +119,38 @@ Eres un asistente especializado en an√°lisis de c√≥digo y automatizaci√≥n para e\\n       \\\"is_binary\\\": false,\\n       \\\"diff_preview\\\": \\\"diff --git a/package.json b/package.json\\\\nindex 49619ea..bcde04c 100644\\\\n--- a/package.json\\\\n+++ b/package.json\\\\n@@ -29,32 +29,38 @@\\\\n   \\\\\\\"homepage\\\\\\\": \\\\\\\"https://mks2508.github.io/advanced-logger/\\\\\\\",\\\\n   \\\\\\\"scripts\\\\\\\": {\\\\n     \\\\\\\"dev\\\\\\\": \\\\\\\"vite\\\\\\\",\\\\n-    \\\\\\\"build\\\\\\\": \\\\\\\"tsc && vite build\\\\\\\",\\\\n-    \\\\\\\"build:watch\\\\\\\": \\\\\\\"vite build --watch\\\\\\\",\\\\n-    \\\\\\\"build:analyze\\\\\\\": \\\\\\\"vite build --mode analyze\\\\\\\",\\\\n-    \\\\\\\"preview\\\\\\\": \\\\\\\"vite preview\\\\\\\",\\\\n+    \\\\\\\"build\\\\\\\": \\\\\\\"tsc && BUILD_MODE=full vite build\\\\\\\",\\\\n+    \\\\\\\"build:full\\\\\\\": \\\\\\\"tsc && BUILD_MODE=full vite build\\\\\\\", \\\\n+    \\\\\\\"build:core\\\\\\\": \\\\\\\"tsc && BUILD_MODE=core vite build\\\\\\\",\\\\n+    \\\\\\\"build:styling\\\\\\\": \\\\\\\"tsc && BUILD_MODE=styling vite build\\\\\\\",\\\\n+    \\\\\\\"build:exports\\\\\\\": \\\\\\\"tsc \"\n+      \"diff_preview\": \"diff --git a/project-utils/.temp/gemini-prompt.txt b/project-utils/.temp/gemini-prompt.txt\\nindex 087f3fb..8fefda8 100644\\n--- a/project-utils/.temp/gemini-prompt.txt\\n+++ b/project-utils/.temp/gemini-prompt.txt\\n@@ -25,211 +25,187 @@ Eres un asistente especializado en an√°lisis de c√≥digo y automatizaci√≥n para e\\n ## Datos del An√°lisis\\n {\\n   \\\"stats\\\": {\\n-    \\\"total_files\\\": 24,\\n-    \\\"total_additions\\\": 162,\\n-    \\\"total_deletions\\\": 3,\\n+    \\\"total_files\\\": 20,\\n+    \\\"total_additions\\\": 61,\\n+    \\\"total_deletions\\\": 15,\\n     \\\"files_by_extension\\\": {\\n-      \\\"yml\\\": 9,\\n-      \\\"json\\\": 2,\\n+      \\\"yml\\\": 5,\\n       \\\"md\\\": 3,\\n+      \\\"json\\\": 6,\\n       \\\"txt\\\": 1,\\n-      \\\"ts\\\": 8,\\n-      \\\"js\\\": 1\\n+      \\\"ts\\\": 5\\n     },\\n     \\\"directories_affected\\\": [\\n       \\\".github\\\",\\n-      \\\"...\\\",\\n+      \\\".release-notes-0.2.0.md\\\",\\n+      \\\"CHANGELOG.json\\\",\\n       \\\"package.json\\\",\\n+      \\\"packages\\\",\\n       \\\"project-utils\\\",\\n+      \\\"...\\\",\\n       \\\"vite.config.ts\\\"\\n     ]\\n   },\\n   \\\"files\\\": [\\n-    {\\n-      \\\"path\\\": \\\".github/workflows/ci.yml -> .github/workflows-backup/ci.yml\\\",\\n-      \\\"status\\\": \\\"renamed\\\",\\n-      \\\"diff_preview\\\": \\\"No diff available\\\"\\n-    },\\n-    {\\n-      \\\"path\\\": \\\".github/workflows-backup/nightly.yml\\\",\\n-      \\\"status\\\": \\\"added\\\",\\n-      \\\"lines_added\\\": 196,\\n-      \\\"lines_removed\\\": 0,\\n-      \\\"is_binary\\\": false,\\n-      \\\"diff_preview\\\": \\\"diff --git a/.github/workflows-backup/nightly.yml b/.github/workflows-backup/nightly.yml\\\\nnew file mode 100644\\\\nindex 0000000..2618595\\\\n--- /dev/null\\\\n+++ b/.github/workflows-backup/nightly.yml\\\\n\"\n     },\n     {\n       \"path\": \"project-utils/.temp/gemini-response.md\",\n       \"status\": \"modified\",\n-      \"lines_added\": 17,\n-      \"lines_removed\": 9,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/.temp/gemini-response.md b/project-utils/.temp/gemini-response.md\\nindex 8c61574..9c98e0b 100644\\n--- a/project-utils/.temp/gemini-response.md\\n+++ b/project-utils/.temp/gemini-response.md\\n@@ -11,26 +11,30 @@ feat(build): Implementaci√≥n de Sistema de Build y Release Modular con IA\\n \\n Se introduce un sistema de automatizaci√≥n y CI/CD completamente nuevo y avanzado para mejorar la eficiencia del desarrollo y la gesti√≥n de releases.\\n \\n-Este sistema reemplaza los flujos de trabajo monol√≠ticos anteriores con una arquitectura modular y potente que permite builds y releases independientes para los distintos componentes de la librer√≠a (`core`, `styling`, `exports`). Adem√°s, se integra un conjunto de herramientas en `project-utils` que automatizan tareas clave como la generaci√≥n de commits, el versionado sem√°ntico y la publicaci√≥n en GitHub, utilizando Gemini AI para an√°lisis inteligente.\\n+Este sistema reemplaza los flujos de trabajo monol√≠ticos anteriores con una arquitectura modular y potente que permite builds y releases independientes para los distintos componentes de la librer√≠a (`core`, `styling`, `exports`). Adem√°s, se integra un conjunto de herramientas en `project-utils` que automatizan tareas clave como la generaci√≥n de commits, el versionado sem√°ntico y la publicaci√≥n en GitHub, utilizando IA para generar an√°lisis y propuestas.\\n \\n <technical>\\n-- **Nuevos Workflows de GitHub Actions**: Se a√±aden flujos de trabajo modulares para CI (`ci-quality.yml`), \"\n-    },\n-    {\n-      \"path\": \"project-utils/auto-release-gemini.ts\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 5,\n-      \"lines_removed\": 2,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/auto-release-gemini.ts b/project-utils/auto-release-gemini.ts\\nindex 72a63ba..97739fe 100755\\n--- a/project-utils/auto-release-gemini.ts\\n+++ b/project-utils/auto-release-gemini.ts\\n@@ -160,7 +160,10 @@ class AutoReleaseManagerAI {\\n     \\n     try {\\n       await this.runCommand('git', ['fetch', 'origin']);\\n-      const result = await this.runCommand('git', ['log', 'HEAD..origin/master', '--oneline']);\\n+      // Detectar rama principal remota\\n+      const currentBranch = await this.runCommand('git', ['branch', '--show-current']);\\n+      const remoteBranch = `origin/${currentBranch.trim()}`;\\n+      const result = await this.runCommand('git', ['log', `HEAD..${remoteBranch}`, '--oneline']);\\n       \\n       if (result.stdout.trim()) {\\n         console.log('üì• Cambios remotos detectados. Actualizando...');\\n@@ -171,7 +174,7 @@ class AutoReleaseManagerAI {\\n           await this.runCommand('git', ['stash', 'push', '-m', 'auto-release-stash']);\\n         }\\n         \\n-        await this.runCommand('git', ['pull', 'origin', 'master']);\\n+        await this.runCommand('git', ['pull', 'origin', currentBranch.trim()]);\\n         console.log('‚úÖ Actualizaci√≥n completa');\\n       } else {\\n         console.log('‚úÖ Repositorio actualizado');\"\n-    },\n-    {\n-      \"path\": \"project-utils/commit-generator.ts\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 2,\n-      \"lines_removed\": 1,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/commit-generator.ts b/project-utils/commit-generator.ts\\nindex 2e6cda9..510e1d4 100755\\n--- a/project-utils/commit-generator.ts\\n+++ b/project-utils/commit-generator.ts\\n@@ -487,7 +487,8 @@ class CommitGenerator {\\n         ? proposal.files \\n         : allFiles\\n             .map(f => f.path)\\n-            .filter(path => !path.includes('.temp/') && !path.startsWith('.release-notes-'));\\n+            .filter(path => !path.includes('.temp/') && !path.startsWith('.release-notes-'))\\n+            .filter(path => !path.includes(' -> ')); // Filtrar sintaxis de rename \\\"file.yml -> backup/file.yml\\\"\\n       \\n       // Agregar archivos espec√≠ficos al staging area\\n       for (const file of targetFiles) {\"\n-    },\n-    {\n-      \"path\": \"project-utils/github-release-manager.ts\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 10,\n-      \"lines_removed\": 2,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/github-release-manager.ts b/project-utils/github-release-manager.ts\\nindex 83dac00..f8c8c73 100644\\n--- a/project-utils/github-release-manager.ts\\n+++ b/project-utils/github-release-manager.ts\\n@@ -131,9 +131,17 @@ class GitHubReleaseManager {\\n         return null;\\n       }\\n \\n-      // Obtener archivos de la distribuci√≥n\\n+      // Obtener solo archivos de la distribuci√≥n (no directorios)\\n       const files = readdirSync(this.releasesDir)\\n-        .map(file => join(this.releasesDir, file));\\n+        .map(file => join(this.releasesDir, file))\\n+        .filter(filePath => {\\n+          try {\\n+            const stat = statSync(filePath);\\n+            return stat.isFile();\\n+          } catch {\\n+            return false;\\n+          }\\n+        });\\n \\n       // Determinar si es prerelease\\n       const isPrerelease = version.includes('-alpha') || version.includes('-beta') || version.includes('-rc') || version.includes('-pre');\"\n-    },\n-    {\n-      \"path\": \"project-utils/version-manager.ts\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 76,\n-      \"lines_removed\": 9,\n-      \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/project-utils/version-manager.ts b/project-utils/version-manager.ts\\nindex b9639b2..1b5ffb7 100644\\n--- a/project-utils/version-manager.ts\\n+++ b/project-utils/version-manager.ts\\n@@ -24,6 +24,8 @@ interface Version {\\n   breaking_changes: string[];\\n   commit_hash: string;\\n   prefix?: string; // pre-alpha, alpha, beta, rc, o undefined para stable\\n+  affected_modules?: string[]; // M√≥dulos afectados en esta versi√≥n\\n+  module_versions?: Record<string, string>; // Versiones espec√≠ficas de cada m√≥dulo\\n }\\n \\n interface ChangelogData {\\n@@ -44,13 +46,17 @@ class VersionManager {\\n   private projectRoot: string;\\n   private changelogPath: string;\\n   private packageJsonPath: string;\\n-  private tauriConfigPath: string;\\n-  private cargoTomlPath: string;\\n+  private modulePackagePaths: Record<string, string>;\\n \\n   constructor() {\\n     this.projectRoot = process.cwd();\\n     this.changelogPath = join(this.projectRoot, 'CHANGELOG.json');\\n     this.packageJsonPath = join(this.projectRoot, 'package.json');\\n+    this.modulePackagePaths = {\\n+      'core': join(this.projectRoot, 'packages/core/package.json'),\\n+      'styling': join(this.projectRoot, 'packages/styling/package.json'),\\n+      'exports': join(this.projectRoot, 'packages/exports/package.json')\\n+    };\\n   }\\n \\n   /**\\n@@ -446,8 +452,9 @@ class VersionManager {\\n       writeFileSync(this.changelogPath, JSON.stringify(changelogData, null, 2));\\n       console.log(`üíæ Changelog actualizado: ${this.changelogPath}`);\\n \\n-      // Actualizar\"\n-    },\n-    {\n-      \"path\": \"vite.config.ts\",\n-      \"status\": \"modified\",\n-      \"lines_added\": 6,\n-      \"lines_removed\": 6,\n+      \"lines_added\": 33,\n+      \"lines_removed\": 16,\n       \"is_binary\": false,\n-      \"diff_preview\": \"diff --git a/vite.config.ts b/vite.config.ts\\nindex a64a3c2..ccc498b 100644\\n--- a/vite.config.ts\\n+++ b/vite.config.ts\\n@@ -85,13 +85,13 @@ const buildConfigs = {\\n     plugins: [\\n       dts({\\n         ...baseConfig.plugins[0].options,\\n-        outDir: 'dist/modular/core/types',\\n+        outDir: 'packages/core/dist/types',\\n         include: ['src/core.ts', 'src/constants.ts', 'src/types/**/*'],\\n       })\\n     ],\\n     build: {\\n       ...baseConfig.build,\\n-      outDir: 'dist/modular/core',\\n+      outDir: 'packages/core/dist',\\n       lib: {\\n         entry: resolve(__dirname, 'src/core.ts'),\\n         name: 'BetterLoggerCore',\\n@@ -117,13 +117,13 @@ const buildConfigs = {\\n     plugins: [\\n       dts({\\n         ...baseConfig.plugins[0].options,\\n-        outDir: 'dist/modular/styling/types',\\n+        outDir: 'packages/styling/dist/types',\\n         include: ['src/styling-module.ts', 'src/constants.ts', 'src/types/**/*'],\\n       })\\n     ],\\n     build: {\\n       ...baseConfig.build,\\n-      outDir: 'dist/modular/styling',\\n+      outDir: 'packages/styling/dist',\\n       lib: {\\n         entry: resolve(__dirname, 'src/styling-module.ts'),\\n         name: 'BetterLoggerStyling',\\n@@ -149,13 +149,13 @@ const buildConfigs = {\\n     plugins: [\\n       dts({\\n         ...baseConfig.plugins[0].options,\\n-        outDir: 'dist/modular/exports/types',\\n+        outDir: 'packages/exports/dist/types',\\n         include: ['src/exports-module.ts', 'src/constants.ts', 'src/types/**/*'],\\n       })\\n     ],\\n     build: {\"\n+      \"diff_preview\": \"diff --git a/project-utils/.temp/gemini-response.md b/project-utils/.temp/gemini-response.md\\nindex 9c98e0b..9349f0a 100644\\n--- a/project-utils/.temp/gemini-response.md\\n+++ b/project-utils/.temp/gemini-response.md\\n@@ -1,40 +1,53 @@\\n ### **AN√ÅLISIS PRINCIPAL**\\n \\n-Se ha detectado una refactorizaci√≥n masiva y la implementaci√≥n de un sistema de automatizaci√≥n completo para el proyecto. Los cambios introducen una infraestructura de CI/CD modular y avanzada, junto con un conjunto de herramientas locales (`project-utils`) para automatizar la generaci√≥n de commits, el versionado y la creaci√≥n de releases, incluyendo integraci√≥n con IA (Gemini). El sistema de build ha sido modificado para soportar compilaciones modulares (`full`, `core`, `styling`, `exports`), aline√°ndose con los nuevos workflows de GitHub Actions.\\n+Se ha realizado una migraci√≥n completa de la infraestructura de CI/CD de NPM a Bun para mejorar el rendimiento. Paralelamente, se ha refactorizado la arquitectura del proyecto a un monorepo, dividiendo la librer√≠a en tres paquetes modulares e independientes: `core`, `styling` y `exports`. Las herramientas de build y automatizaci√≥n han sido actualizadas para soportar esta nueva estructura.\\n \\n ---\\n \\n ### **Propuesta de Commit #1**\\n \\n ```markdown\\n-feat(build): Implementaci√≥n de Sistema de Build y Release Modular con IA\\n+chore(ci): migrar la infraestructura de CI/CD de NPM a Bun\\n \\n-Se introduce un sistema de automatizaci√≥n y CI/CD completamente nuevo y avanzado para mejorar la \"\n     }\n   ],\n   \"patterns\": \"No commit patterns found\"",
      "lines_added": 19,
      "lines_removed": 155,
      "is_binary": false
    },
    {
      "path": "project-utils/.temp/gemini-response.md",
      "status": "modified",
      "diff": "diff --git a/project-utils/.temp/gemini-response.md b/project-utils/.temp/gemini-response.md\nindex 9349f0a..a3fdec9 100644\n--- a/project-utils/.temp/gemini-response.md\n+++ b/project-utils/.temp/gemini-response.md\n@@ -16,38 +16,37 @@ Se reemplaza `npm` con `bun` en todos los flujos de trabajo de GitHub Actions pa\n - **Setup**: Reemplazado `actions/setup-node` por `oven-sh/setup-bun`.\n - **Instalaci√≥n**: Cambiado `npm run ci:install` por `bun install --frozen-lockfile`.\n - **Ejecuci√≥n de Scripts**: Actualizados todos los comandos `npm run` a `bun run`.\n-- **Matriz de Pruebas**: La matriz en `ci-quality.yml` ahora prueba contra versiones de `bun` en lugar de `node`.\n+- **Matriz de Pruebas**: Estandarizada para usar `bun` en todas las versiones de Node.\n </technical>\n \n <changelog>\n-## [Improvement] [üöÄ]\n-Infraestructura de CI/CD migrada a Bun para mayor rendimiento y eficiencia.\n+## [Infraestructura] ‚öôÔ∏è\n+- Optimizaci√≥n de la infraestructura de CI/CD para mejorar el rendimiento y la velocidad de los builds.\n </changelog>\n ```\n \n ### **Propuesta de Commit #2**\n \n ```markdown\n-feat(build): implementar arquitectura de monorepo modular\n+refactor(arquitectura): refactorizar a monorepo y modularizar paquetes\n \n-Se refactoriza el proyecto a una arquitectura de monorepo para mejorar la modularidad y mantenibilidad. Se crean tres paquetes publicables e independientes: `@mks2508/better-logger-core`, `@mks2508/better-logger-styling` y `@mks2508/better-logger-exports`.\n+Se reestructura el proyecto a una arquitectura de monorepo utilizando workspaces. La librer√≠a se ha dividido en tres paquetes independientes: `@advanced-logger/core`, `@advanced-logger/styling` y `@advanced-logger/exports`.\n \n-Este cambio permite un versionado m√°s granular y facilita la reutilizaci√≥n de componentes. El sistema de build y las herramientas de automatizaci√≥n se han actualizado para ser compatibles con esta nueva estructura.\n+Esta modularizaci√≥n mejora la mantenibilidad, permite el versionado independiente de cada paquete y facilita la reutilizaci√≥n del c√≥digo. Se han actualizado las configuraciones de build y `package.json` para reflejar la nueva estructura.\n \n <technical>\n-- **Estructura de Paquetes**: Creados los directorios `packages/core`, `packages/styling` y `packages/exports`, cada uno con su propio `package.json`.\n-- **Configuraci√≥n de Build**: Actualizado `vite.config.ts` para dirigir las salidas de compilaci√≥n a los directorios `dist/` de cada paquete modular.\n-- **Gesti√≥n de Versiones**: Modificado `project-utils/version-manager.ts` para detectar y actualizar las versiones de todos los paquetes del monorepo.\n-- **Herramientas de Release**: Mejorados los scripts en `project-utils` para manejar correctamente la nueva estructura de paquetes y las ramas de git.\n-- **Versionado**: La versi√≥n principal del proyecto se actualiza a `0.2.0` para reflejar este cambio arquitect√≥nico significativo.\n+- **Estructura de Directorios**: Creada la carpeta `packages/` que contiene `core/`, `styling/` y `exports/`.\n+- **package.json**: Actualizado el `package.json` ra√≠z para definir los workspaces.\n+- **Paquetes**: Cada paquete (`core`, `styling`, `exports`) tiene su propio `package.json` con sus dependencias y scripts.\n+- **Build**: Actualizado `vite.config.ts` y los scripts de build para compilar cada paquete de forma independiente.\n </technical>\n \n <changelog>\n-## [Feature] [‚ú®]\n-Implementada arquitectura de monorepo con paquetes modulares (`core`, `styling`, `exports`).\n+## [Refactor] ‚ôªÔ∏è\n+- Arquitectura refactorizada a un monorepo para mayor modularidad. La librer√≠a ahora se distribuye en tres paquetes: `@advanced-logger/core`, `@advanced-logger/styling` y `@advanced-logger/exports`.\n </changelog>\n ```\n \n ---\n \n-**DECISI√ìN**: Se proponen dos commits para separar l√≥gicamente dos cambios significativos e independientes: la migraci√≥n de la infraestructura de CI a Bun y la refactorizaci√≥n arquitect√≥nica a un monorepo. Esto mejora la claridad y legibilidad del historial de cambios.\n+**DECISI√ìN**: Se proponen dos commits porque los cambios abordan dos √°reas conceptualmente distintas: la migraci√≥n de herramientas de CI/CD (un cambio de infraestructura) y la refactorizaci√≥n a una arquitectura monorepo (un cambio estructural del c√≥digo base). Separarlos mantiene el historial del repositorio limpio y facilita el seguimiento de cambios espec√≠ficos.",
      "lines_added": 13,
      "lines_removed": 8,
      "is_binary": false
    },
    {
      "path": "project-utils/commit-generator.ts",
      "status": "modified",
      "diff": "diff --git a/project-utils/commit-generator.ts b/project-utils/commit-generator.ts\nindex 510e1d4..f9dfb9a 100755\n--- a/project-utils/commit-generator.ts\n+++ b/project-utils/commit-generator.ts\n@@ -461,20 +461,124 @@ class CommitGenerator {\n   /**\n    * Parsea propuestas de commit de la respuesta de Gemini\n    */\n-  private parseCommitProposals(aiResponse: string): CommitProposal[] {\n+  private parseCommitProposals(aiResponse: string, allFiles: FileChange[]): CommitProposal[] {\n     // Usar el parser estandarizado\n     const parsedProposals = GeminiResponseParser.parseCommitProposals(aiResponse);\n     \n-    // Convertir al formato interno\n+    // Si hay m√∫ltiples commits, dividir archivos inteligentemente\n+    if (parsedProposals.length > 1) {\n+      return this.distributeFilesAcrossCommits(parsedProposals, allFiles);\n+    }\n+    \n+    // Commit √∫nico usa todos los archivos\n     return parsedProposals.map(proposal => ({\n       title: proposal.title,\n       description: proposal.description,\n       technical: proposal.technical,\n       changelog: proposal.changelog,\n-      files: [] // Usar todos los archivos disponibles\n+      files: allFiles.map(f => f.path).filter(path => \n+        !path.includes('.temp/') && \n+        !path.startsWith('.release-notes-') &&\n+        !path.includes(' -> ')\n+      )\n     }));\n   }\n \n+  /**\n+   * Distribuye archivos entre m√∫ltiples commits basado en patrones\n+   */\n+  private distributeFilesAcrossCommits(\n+    parsedProposals: any[], \n+    allFiles: FileChange[]\n+  ): CommitProposal[] {\n+    const availableFiles = allFiles\n+      .map(f => f.path)\n+      .filter(path => \n+        !path.includes('.temp/') && \n+        !path.startsWith('.release-notes-') &&\n+        !path.includes(' -> ')\n+      );\n+\n+    const fileDistribution = new Map<string, string[]>();\n+    const usedFiles = new Set<string>();\n+\n+    // Patterns para clasificar archivos por tipo de commit\n+    const patterns = {\n+      ci: ['.github/workflows/', 'project-utils/', '.yml'],\n+      architecture: ['package.json', 'packages/', 'vite.config.ts', 'tsconfig.json'],\n+      core: ['src/core', 'src/Logger.ts', 'src/constants.ts'],\n+      styling: ['src/styling', 'src/style'],\n+      exports: ['src/exports', 'src/handlers/'],\n+      docs: ['README.md', 'docs/', '.md'],\n+      config: ['vite.config', 'tsconfig', '.json']\n+    };\n+\n+    // Asignar archivos a commits basado en contenido/t√≠tulo\n+    parsedProposals.forEach((proposal, index) => {\n+      const commitFiles: string[] = [];\n+      const title = proposal.title.toLowerCase();\n+      const description = (proposal.description || '').toLowerCase();\n+      \n+      // Detectar tipo de commit por t√≠tulo/descripci√≥n\n+      let commitType = 'misc';\n+      if (title.includes('ci') || title.includes('workflow') || title.includes('bun')) {\n+        commitType = 'ci';\n+      } else if (title.includes('arquitectura') || title.includes('monorepo') || title.includes('modular')) {\n+        commitType = 'architecture';\n+      } else if (title.includes('core') || title.includes('logger')) {\n+        commitType = 'core';\n+      } else if (title.includes('styling') || title.includes('style')) {\n+        commitType = 'styling';\n+      } else if (title.includes('export') || title.includes('handler')) {\n+        commitType = 'exports';\n+      }\n+\n+      // Asignar archivos que coincidan con el patr√≥n\n+      if (patterns[commitType]) {\n+        availableFiles.forEach(file => {\n+          if (!usedFiles.has(file)) {\n+            const matchesPattern = patterns[commitType].some(pattern => \n+              file.includes(pattern)\n+            );\n+            if (matchesPattern) {\n+              commitFiles.push(file);\n+              usedFiles.add(file);\n+            }\n+          }\n+        });\n+      }\n+\n+      fileDistribution.set(`commit_${index}`, commitFiles);\n+    });\n+\n+    // Asignar archivos restantes al primer commit (fallback)\n+    const remainingFiles = availableFiles.filter(file => !usedFiles.has(file));\n+    if (remainingFiles.length > 0) {\n+      const firstCommitFiles = fileDistribution.get('commit_0') || [];\n+      firstCommitFiles.push(...remainingFiles);\n+      fileDistribution.set('commit_0', firstCommitFiles);\n+    }\n+\n+    // Crear propuestas finales\n+    return parsedProposals.map((proposal, index) => {\n+      const commitFiles = fileDistribution.get(`commit_${index}`) || [];\n+      \n+      // Log de asignaci√≥n (solo en modo debug)\n+      if (!this.quiet) {\n+        console.log(`üìã Commit ${index + 1}: \"${proposal.title}\" ‚Üí ${commitFiles.length} archivos`);\n+        commitFiles.forEach(file => console.log(`  - ${file}`));\n+      }\n+      \n+      return {\n+        title: proposal.title,\n+        description: proposal.description,\n+        technical: proposal.technical,\n+        changelog: proposal.changelog,\n+        files: commitFiles\n+      };\n+    });\n+  }\n+\n   /**\n    * Ejecuta un commit individual\n    */\n@@ -490,23 +594,43 @@ class CommitGenerator {\n             .filter(path => !path.includes('.temp/') && !path.startsWith('.release-notes-'))\n             .filter(path => !path.includes(' -> ')); // Filtrar sintaxis de rename \"file.yml -> backup/file.yml\"\n       \n+      // Validaci√≥n pre-commit: verificar que hay archivos para procesar\n+      if (targetFiles.length === 0) {\n+        console.warn(`  ‚ö†Ô∏è No hay archivos asignados a este commit`);\n+        return false;\n+      }\n+\n+      this.log(`  üìã Procesando ${targetFiles.length} archivos asignados`);\n+\n       // Agregar archivos espec√≠ficos al staging area\n+      let stagedFiles = 0;\n       for (const file of targetFiles) {\n         try {\n           await this.gitCommand(['add', file]);\n+          stagedFiles++;\n           this.log(`  ‚úì Agregado: ${file}`);\n         } catch (error) {\n           console.warn(`  ‚ö†Ô∏è No se pudo agregar ${file}:`, error);\n         }\n       }\n       \n+      // Validaci√≥n: verificar que se staged al menos un archivo\n+      if (stagedFiles === 0) {\n+        console.warn(`  ‚ö†Ô∏è No se pudo agregar ning√∫n archivo al staging area`);\n+        return false;\n+      }\n+      \n       // Verificar que hay algo para commitear\n       try {\n         const statusResult = await this.gitCommand(['diff', '--cached', '--name-only']);\n         if (!statusResult.trim()) {\n-          console.warn(`  ‚ö†Ô∏è No hay cambios staged para este commit`);\n+          console.warn(`  ‚ö†Ô∏è No hay cambios staged para este commit (staged files: ${stagedFiles})`);\n           return false;\n         }\n+        \n+        const stagedFilesList = statusResult.trim().split('\\n');\n+        this.log(`  üì¶ ${stagedFilesList.length} archivos listos para commit`);\n+        \n       } catch (error) {\n         // Fallback si diff --cached no funciona\n         this.log(`  üîç Verificando staging area...`);\n@@ -593,7 +717,10 @@ class CommitGenerator {\n     \n     try {\n       const proposalContent = readFileSync(proposalPath, 'utf-8');\n-      const proposals = this.parseCommitProposals(proposalContent);\n+      \n+      // Obtener archivos disponibles\n+      const allFiles = await this.getChangedFiles();\n+      const proposals = this.parseCommitProposals(proposalContent, allFiles);\n       \n       if (proposals.length === 0) {\n         console.error('‚ùå No se encontraron commits v√°lidos en el archivo de propuesta');\n@@ -746,7 +873,7 @@ class CommitGenerator {\n         \n         // Parsear y ejecutar commits\n         this.log('\\nü§ñ Ejecutando commits autom√°ticamente...');\n-        const proposals = this.parseCommitProposals(commitProposal);\n+        const proposals = this.parseCommitProposals(commitProposal, allFiles);\n         \n         if (proposals.length === 0) {\n           console.warn('‚ö†Ô∏è No se encontraron commits v√°lidos para ejecutar');\n@@ -755,10 +882,15 @@ class CommitGenerator {\n           return;\n         }\n         \n-        this.log(`üì¶ Encontrados ${proposals.length} commits para ejecutar:`);\n-        proposals.forEach((p, i) => {\n-          this.log(`  ${i + 1}. ${p.title}`);\n-        });\n+        // En modo quiet, mostrar progreso compacto\n+        if (this.quiet) {\n+          console.log(`üöÄ Ejecutando ${proposals.length} commits propuestos...`);\n+        } else {\n+          this.log(`üì¶ Encontrados ${proposals.length} commits para ejecutar:`);\n+          proposals.forEach((p, i) => {\n+            this.log(`  ${i + 1}. ${p.title}`);\n+          });\n+        }\n         \n         let successfulCommits = 0;\n         \n@@ -768,13 +900,19 @@ class CommitGenerator {\n           const success = await this.executeCommit(proposal, analysis.files);\n           if (success) {\n             successfulCommits++;\n+            // Mostrar √©xito incluso en modo quiet\n+            const status = this.quiet ? `‚úÖ Commit ${i + 1}/${proposals.length}: \"${proposal.title}\"` \n+                                      : `‚úÖ Commit ${i + 1} exitoso`;\n+            console.log(status);\n           } else {\n-            console.error(`‚ùå Fall√≥ commit ${i + 1}: ${proposal.title}`);\n+            // Mostrar errores siempre (incluso en quiet)\n+            console.error(`‚ùå Commit ${i + 1}/${proposals.length}: \"${proposal.title}\" - No hay cambios staged`);\n             // Continuar con los siguientes commits\n           }\n         }\n         \n-        this.log(`\\nüìä Resultados: ${successfulCommits}/${proposals.length} commits exitosos`);\n+        // Mostrar resultados finales (siempre visible)\n+        console.log(`\\nüìä Resultado: ${successfulCommits}/${proposals.length} commits exitosos`);\n         \n         if (successfulCommits > 0) {\n           await this.pushCommits();",
      "lines_added": 150,
      "lines_removed": 12,
      "is_binary": false
    }
  ],
  "stats": {
    "total_files": 5,
    "total_additions": 31,
    "total_deletions": 40,
    "files_by_extension": {
      "json": 1,
      "md": 2,
      "txt": 1,
      "ts": 1
    },
    "directories_affected": [
      "project-utils",
      "..."
    ]
  },
  "project_context": {
    "name": "OpenTUI",
    "description": "Modern Terminal User Interface Framework",
    "tech_stack": [
      "TypeScript",
      "Node.js",
      "Terminal UI",
      "CLI"
    ],
    "target_platform": "Cross-platform (macOS, Linux, Windows)"
  },
  "commit_patterns": "No commit patterns found"
}